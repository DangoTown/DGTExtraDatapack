name: Release

on:
  pull_request:
    branches:
      - main
    types: 
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Release')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Extract version from PR title
      id: extract_version
      run: |
        VERSION=$(echo "${{ github.event.pull_request.title }}" | sed 's/Release //')
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Get PR description
      id: get_pr_description
      run: |
        DESCRIPTION=$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)
        echo "DESCRIPTION=${DESCRIPTION}" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: ${{ env.DESCRIPTION }}
        draft: false
        prerelease: false

    - name: Create zip file
      run: |
        zip -r DGTExtra_datapack_${{ env.VERSION }}.zip data LICENSE pack.mcmeta pack.png README.md

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./DGTExtra_datapack_${{ env.VERSION }}.zip
        asset_name: DGTExtra_datapack_${{ env.VERSION }}.zip
        asset_content_type: application/zip
